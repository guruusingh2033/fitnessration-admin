{"version":3,"sources":["meteor://ðŸ’»app/imports/api/addOns.js","meteor://ðŸ’»app/imports/api/anomalyTriggers.js","meteor://ðŸ’»app/imports/api/blocks.js","meteor://ðŸ’»app/imports/api/bundleTypes.js","meteor://ðŸ’»app/imports/api/deleted.js","meteor://ðŸ’»app/imports/api/fulfillmentSettings.js","meteor://ðŸ’»app/imports/api/ingredients.js","meteor://ðŸ’»app/imports/api/locationSurcharges.js","meteor://ðŸ’»app/imports/api/mealPlans.js","meteor://ðŸ’»app/imports/api/mealStock.js","meteor://ðŸ’»app/imports/api/meals.js","meteor://ðŸ’»app/imports/api/orders.js","meteor://ðŸ’»app/imports/api/partners.js","meteor://ðŸ’»app/imports/api/portions.js","meteor://ðŸ’»app/imports/api/promotions.js","meteor://ðŸ’»app/imports/api/sides.js","meteor://ðŸ’»app/imports/api/stockCache.js","meteor://ðŸ’»app/imports/api/surveys.js","meteor://ðŸ’»app/imports/api/timeSlots.js","meteor://ðŸ’»app/imports/api/users.js","meteor://ðŸ’»app/imports/StockCalculator.js","meteor://ðŸ’»app/imports/date.ts","meteor://ðŸ’»app/imports/helpers.js","meteor://ðŸ’»app/server/main.js"],"names":["module","export","AddOns","Mongo","import","v","Collection","idGeneration","Meteor","isServer","publish","find","AnomalyTriggers","Blocks","BundleTypes","Deleted","FulfillmentSettings","attachSchema","SimpleSchema","deliveryFee","type","Number","decimal","Date","optional","freeDeliveryThreshold","minDays","cutoffTime","transform","Ingredients","LocationSurcharges","surcharge","postalPrefix","String","MealPlans","MealStock","formatDate","initial","adjustment","restock","output","sales","nonSales","stock","lastUpdated","Object","blackbox","meal","ObjectID","date","minDate","maxDate","$gte","$lte","Meals","Orders","$lt","id","Partners","Portions","Promotions","name","Boolean","defaultValue","start","end","fulfillmentStart","fulfillmentEnd","discount","overridePrice","promoCode","sku","usageLimit","premiumAllowance","premiumCap","mealPlan","RegEx","Id","portion","bundleType","Sides","StockCache","Surveys","TimeSlots","users","StockCalculator","addDays","today","mealSales","calculate","mealId","api","mealStock","findMealStock","firstDate","_calcCache","_mealStockCache","_cache","cachedValues","initCache","findOne","forDate","_forDate","currentDate","prevDate","amPm","timeDisplay","monthName","_","lodash","getFullYear","padStart","getMonth","getDate","time","appendSuffix","parse","hours","getHours","suffix","orders","state","bundles","$elemMatch","mealSelections","fetch","order","bundle","mealSelection","_id","_str","quantity","month","HTTP","Restivus","addRoute","get","console","log","queryParams","filter","query","mealPlans","RegExp","map","portions","$or","$in","meals","rows","stockCalculator","values","push","response","setHeader","write","keys","join","row","done","mealStocks","update","$set","recordStock","_today","yesterday","yesterdaysStock","insert","assign","lastDate","prevValues","stockCache","timestamp","valueOf","computeStock","previousDay","final","upsert","startup","SyncedCron","add","schedule","parser","cron","job","methods","uploadImage","args","result","post","settings","public","imageServerUrl","content","data","clearStockCache","remove","sendResetPasswordEmail","userId","Accounts"],"mappings":"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","file":"/app.js","sourcesContent":["import { Mongo } from 'meteor/mongo';\n \nexport const AddOns = new Mongo.Collection('addOns', {idGeneration: 'MONGO'});\n\nif (Meteor.isServer) {\n  Meteor.publish('addOns', function() {\n  \treturn AddOns.find();\n  });\n}\n","import { Mongo } from 'meteor/mongo';\n \nexport const AnomalyTriggers = new Mongo.Collection('anomalyTriggers', {idGeneration: 'MONGO'});\n\nif (Meteor.isServer) {\n  Meteor.publish('anomalyTriggers', function() {\n    return AnomalyTriggers.find();\n  });\n}\n","import { Mongo } from 'meteor/mongo';\n \nexport const Blocks = new Mongo.Collection('blocks', {idGeneration: 'MONGO'});\n\nif (Meteor.isServer) {\n  Meteor.publish('blocks', function() {\n  \treturn Blocks.find();\n  });\n}\n\n","import { Mongo } from 'meteor/mongo';\n \nexport const BundleTypes = new Mongo.Collection('bundleTypes', {idGeneration: 'MONGO'});\n\nif (Meteor.isServer) {\n  Meteor.publish('bundleTypes', function() {\n  \treturn BundleTypes.find();\n  });\n}\n","import { Mongo } from 'meteor/mongo';\n \nexport const Deleted = new Mongo.Collection('deleted', {idGeneration: 'MONGO'});\n\nif (Meteor.isServer) {\n  Meteor.publish('deleted', function() {\n  \treturn Deleted.find();\n  });\n}\n","import { Mongo } from 'meteor/mongo';\n \nexport const FulfillmentSettings = new Mongo.Collection('fulfillmentSettings', {idGeneration: 'MONGO'});\nFulfillmentSettings.attachSchema(new SimpleSchema({\n\tdeliveryFee: { type: Number, decimal: true },\n\t'timestamps.deliveryFee': { type: Date, optional: true },\n\n\tfreeDeliveryThreshold: { type: Number },\n\t'timestamps.freeDeliveryThreshold': { type: Date, optional: true },\n\n\tminDays: { type: Number },\n\t'timestamps.minDays': { type: Date, optional: true },\n\t\n\tcutoffTime: { type: Number },\n\t'timestamps.cutoffTime': { type: Date, optional: true },\n}), {transform:true});\n\nif (Meteor.isServer) {\n  Meteor.publish('fulfillmentSettings', () => {\n  \treturn FulfillmentSettings.find();\n  });\n}\n","import { Mongo } from 'meteor/mongo';\n \nexport const Ingredients = new Mongo.Collection('ingredients', {idGeneration: 'MONGO'});\n\nif (Meteor.isServer) {\n  Meteor.publish('ingredients', function() {\n  \treturn Ingredients.find();\n  });\n}\n","import { Mongo } from 'meteor/mongo';\n \nexport const LocationSurcharges = new Mongo.Collection('locationSurcharges', {idGeneration: 'MONGO'});\nLocationSurcharges.attachSchema(new SimpleSchema({\n\tsurcharge: { type: Number, decimal: true },\n\tpostalPrefix: { type: String }\n}), {transform:true});\n\nif (Meteor.isServer) {\n  Meteor.publish('locationSurcharges', function() {\n  \treturn LocationSurcharges.find();\n  });\n}\n","import { Mongo } from 'meteor/mongo';\n \nexport const MealPlans = new Mongo.Collection('mealPlans', {idGeneration: 'MONGO'});\n\nif (Meteor.isServer) {\n  Meteor.publish('mealPlans', function() {\n  \treturn MealPlans.find();\n  });\n}\n","import { Mongo } from 'meteor/mongo';\nimport { formatDate } from '../helpers';\n \nexport const MealStock = new Mongo.Collection('mealStock', {idGeneration: 'MONGO'});\nMealStock.attachSchema(new SimpleSchema({\n\tinitial: { type: Number, optional: true },\n\tadjustment: { type: Number, optional: true },\n\trestock: { type: Number, optional: true },\n\toutput: { type: Number, optional: true },\n\tsales: { type: Number, optional: true },\n\tnonSales: { type: Number, optional: true },\n\tstock: { type: Number, optional: true },\n\t\n\tlastUpdated: { type: Object, optional: true, blackbox: true },\n\tmeal: { type: Mongo.ObjectID },\n\tdate: { type: String },\n}), {transform:true});\n\nif (Meteor.isServer) {\n  Meteor.publish('mealStock', function() {\n  \treturn MealStock.find();\n  });\n\n  Meteor.publish('mealStockForDates', function(minDate, maxDate) {\n  \treturn MealStock.find({date:{$gte:minDate, $lte:maxDate}});\n  });\n}\n","import { Mongo } from 'meteor/mongo';\n \nexport const Meals = new Mongo.Collection('meals', {idGeneration: 'MONGO'});\n\nif (Meteor.isServer) {\n  Meteor.publish('meals', function() {\n  \treturn Meals.find();\n  });\n}\n","import { Mongo } from 'meteor/mongo';\n \nexport const Orders = new Mongo.Collection('orders', {idGeneration: 'MONGO'});\nimport { formatDate } from '../helpers';\n\nif (Meteor.isServer) {\n  Meteor.publish('orders', function() {\n  \treturn Orders.find();\n  });\n\n  Meteor.publish('ordersByDate', function(minDate, maxDate) {\n  \treturn Orders.find({'deliveryOptions.date':{$gte:minDate, $lt:maxDate}});\n  });\n\n  Meteor.publish('orderById', function(id) {\n  \treturn Orders.find(id);\n  });\n\n  Meteor.publish('futureOrders', function(id) {\n  \treturn Orders.find({'deliveryOptions.date':{$gte:formatDate(new Date)}});\n  });\n}\n","import { Mongo } from 'meteor/mongo';\nexport const Partners = new Mongo.Collection('partners', {idGeneration: 'MONGO'});\nif (Meteor.isServer) {\n  Meteor.publish('partners', function() {\n  \treturn Partners.find();\n  });\n}\n","import { Mongo } from 'meteor/mongo';\n \nexport const Portions = new Mongo.Collection('portions', {idGeneration: 'MONGO'});\n\nif (Meteor.isServer) {\n  Meteor.publish('portions', function() {\n  \treturn Portions.find();\n  });\n}\n","import { Mongo } from 'meteor/mongo';\n \nexport const Promotions = new Mongo.Collection('promotions', {idGeneration: 'MONGO'});\nPromotions.attachSchema(new SimpleSchema({\n\tname: {type: String },\n\tdeliveryFee: { type: Boolean, defaultValue: false },\n\tstart: { type: String },\n\tend: { type: String },\n\tfulfillmentStart: { type: String, optional: true },\n\tfulfillmentEnd: { type: String, optional: true },\n\tdiscount: { type: Number, optional: true },\n\toverridePrice: { type: Number, optional: true, decimal: true },\n\ttype: { type: String },\n\tpromoCode: { type: String },\n\tsku: { type: String },\n\tusageLimit: { type: Number, optional: true },\n\n\tpremiumAllowance: { type: Number, optional: true },\n\tpremiumCap: { type: Number, optional: true },\n\n\tmealPlan: { type: SimpleSchema.RegEx.Id, optional: true, defaultValue: null },\n\tportion: { type: SimpleSchema.RegEx.Id, optional: true, defaultValue: null },\n\tbundleType: { type: SimpleSchema.RegEx.Id, optional: true, defaultValue: null }\n}), {transform:true});\n\nif (Meteor.isServer) {\n  Meteor.publish('promotions', function() {\n  \treturn Promotions.find();\n  });\n}\n","import { Mongo } from 'meteor/mongo';\n \nexport const Sides = new Mongo.Collection('sides', {idGeneration: 'MONGO'});\n\nif (Meteor.isServer) {\n  Meteor.publish('sides', function() {\n  \treturn Sides.find();\n  });\n}\n","import { Mongo } from 'meteor/mongo';\nexport const StockCache = new Mongo.Collection('stockCache', {idGeneration: 'MONGO'});\n","import { Mongo } from 'meteor/mongo';\nexport const Surveys = new Mongo.Collection('surveys', {idGeneration: 'MONGO'});\nif (Meteor.isServer) {\n  Meteor.publish('surveys', function() {\n  \treturn Surveys.find();\n  });\n}\n","import { Mongo } from 'meteor/mongo';\n \nexport const TimeSlots = new Mongo.Collection('timeSlots', {idGeneration: 'MONGO'});\n\nif (Meteor.isServer) {\n  Meteor.publish('timeSlots', function() {\n  \treturn TimeSlots.find();\n  });\n}\n","import { Mongo } from 'meteor/mongo';\n \n// export const Users = new Mongo.Collection('users', {idGeneration: 'MONGO'});\n\nif (Meteor.isServer) {\n  Meteor.publish('users', function() {\n  \treturn Meteor.users.find();\n  });\n}\n","import { addDays, formatDate, today } from './date';\nimport { MealStock } from './api/mealStock';\nimport { mealSales } from './helpers';\n\nexport class StockCalculator {\n  static calculate(initial, date, mealId, api) {\n    var mealStock = api.findMealStock(mealId, date) || {};//MealStock.findOne({meal:mealId, date:date}) || {};\n\n    var sales = mealSales(mealId, date);\n    var output = sales + (mealStock.nonSales || 0);\n    var stock = initial + (mealStock.adjustment || 0) - output + (mealStock.restock || 0);\n\n    return {\n      initial: initial,\n      adjustment: mealStock.adjustment,\n      sales: sales,\n      nonSales: mealStock.nonSales || 0,\n      output: output,\n      restock: mealStock.restock || 0,\n      stock: stock\n    };\n  }\n\n  constructor(mealId) {\n    this.today = formatDate(new Date());\n    this.firstDate = '2016-08-29';\n    this.mealId = mealId;\n    this._calcCache = {};\n    this._mealStockCache = {};\n    this._cache = {};\n  }\n\n  cachedValues(date) {\n    return this._calcCache[date];\n  }\n\n  initCache(date) {\n\n  }\n\n  findMealStock(date) {\n    if (!this._mealStockCache[date]) {\n      this._mealStockCache[date] = MealStock.findOne({meal:this.mealId, date:date});\n    }\n    return this._mealStockCache[date];\n  }\n\n  forDate(date) {\n    date = typeof date == 'string' ? date : formatDate(date);\n\n    if (!this._cache[date]) {\n      this._cache[date] = this._forDate(date);\n    }\n\n    return this._cache[date];\n  }\n\n  _forDate(date) {\n    if (date < formatDate(today())) {\n      return this.findMealStock(date);\n    }\n    var firstDate = formatDate(today());\n    var currentDate = firstDate;\n    var prevDate;\n    while (currentDate <= date) {\n      if (!this._calcCache[currentDate]) {\n        var mealStock = this.findMealStock(currentDate) || {};\n        var initial = currentDate == firstDate ? mealStock.initial : (this._calcCache[prevDate].stock || 0);\n        this._calcCache[currentDate] = StockCalculator.calculate(initial, currentDate, this.mealId, {\n          findMealStock: (mealId, date) => {return this.findMealStock(date)}\n        });\n      }\n      prevDate = currentDate;\n      currentDate = formatDate(addDays(currentDate, 1));\n    }\n    return this._calcCache[date];\n  }\n}\n","export function today() {\n  var now = new Date();\n  return createDay(now.getFullYear(), now.getMonth(), now.getDate());\n}\n\nexport function createDay(year, month, day) {\n  return new Date(year, month, day, 0, 0, 0);\n}\nexport function addDays(date, days) {\n  date = convertToDate(date);\n  return createDay(date.getFullYear(), date.getMonth(), date.getDate() + days);\n}\nexport function firstDayOfMonth(month) {\n  return createDay(month.getFullYear(), month.getMonth(), 1);\n}\nexport function calendarDaysForMonth(month, square=true) {\n  var days = [];\n  var firstDay = firstDayOfMonth(month);\n  if (square) {\n    for (var i = 0; i < 7 - (7 - firstDay.getDay()); ++ i) {\n      days.unshift(addDays(firstDay, -(i + 1)));\n    }    \n  }\n  var day = firstDay;\n  while (day.getMonth() == month.getMonth() || day.getMonth() > month.getMonth() && days.length % 7 && square) {\n    days.push(day);\n    day = addDays(day, 1);\n  }\n  return days;\n}\n\nexport function convertToDate(date: Date|string): Date {\n  if (typeof date == 'string') {\n    return new Date(Date.parse(<string>date + ' 00:00'));\n  }\n  else {\n    return <Date>date;\n  }\n}\n\nexport function formatDate(date) {\n  if (date) {\n    return date.getFullYear() + '-' + _.padStart(date.getMonth() + 1, 2, '0') + '-' + _.padStart(date.getDate(), 2, '0');    \n  }\n}\n\nexport function weeksForMonth(month: Date):Array<Array<Date>> {\n  var days = calendarDaysForMonth(month);\n  var weeks = [];\n  for (var i = 0; i < days.length/7; ++i) {\n    weeks.push(days.slice(i*7, i*7 + 7));\n  }\n  return weeks;\n}\n","_ = lodash;\n\nimport { Orders } from './api/orders';\n\nexport function formatDate(date) {\n\tif (date) {\n\t\treturn date.getFullYear() + '-' + _.padStart(date.getMonth() + 1, 2, '0') + '-' + _.padStart(date.getDate(), 2, '0');\n\t}\n}\n\nexport function amPm(time, appendSuffix=true) {\n  var date = new Date(Date.parse('Jan 1 ' + time));\n  var hours = date.getHours();\n  var suffix = hours >= 12 ? \"pm\":\"am\";\n  hours = ((hours + 11) % 12 + 1); \n\n  return hours + (appendSuffix ? '' + suffix : '');\n}\n\nexport function timeDisplay(time) {\n\tif (time) {\n\t  return amPm(time.start, false) + '-' + amPm(time.end);\t\t\n\t}\n}\n\nexport function mealSales(mealId, date) {\n  var orders = Orders.find({'deliveryOptions.date':date, state:'completed', bundles:{$elemMatch:{mealSelections:{$elemMatch:{'meal._id':mealId}}}}}).fetch();\n  var sales = 0;\n  for (var order of orders) {\n  \tfor (var bundle of order.bundles) {\n  \t\tfor (var mealSelection of bundle.mealSelections) {\n  \t\t\tif (mealSelection.meal._id._str == mealId._str) {\n  \t\t\t\tsales += mealSelection.quantity;\n  \t\t\t\tbreak;\n  \t\t\t}\n  \t\t}\n  \t}\n  }\n  return sales;\n}\n\n\nexport function monthName(month) {\n  switch (month + 1) {\n    case 1: return 'January';\n    case 2: return 'February';\n    case 3: return 'March';\n    case 4: return 'April';\n    case 5: return 'May';\n    case 6: return 'June';\n    case 7: return 'July';\n    case 8: return 'August';\n    case 9: return 'September';\n    case 10: return 'October';\n    case 11: return 'November';\n    case 12: return 'December';\n  }\n}\n","import { Meteor } from 'meteor/meteor';\nimport '../imports/api/users';\nimport { formatDate, mealSales } from '../imports/helpers';\nimport { addDays, today } from '../imports/date';\nimport { StockCalculator } from '../imports/StockCalculator';\nimport { HTTP } from 'meteor/http';\nimport { Orders } from '../imports/api/orders';\nimport { Portions } from '../imports/api/portions';\nimport { MealPlans } from '../imports/api/mealPlans';\nimport { BundleTypes } from '../imports/api/bundleTypes';\nimport { Meals } from '../imports/api/meals';\nimport { Ingredients } from '../imports/api/ingredients';\nimport { TimeSlots } from '../imports/api/timeSlots';\nimport { Blocks } from '../imports/api/blocks';\nimport { LocationSurcharges } from '../imports/api/locationSurcharges';\nimport { FulfillmentSettings } from '../imports/api/fulfillmentSettings';\nimport { Promotions } from '../imports/api/promotions';\nimport { MealStock } from '../imports/api/mealStock';\nimport { Sides } from '../imports/api/sides';\nimport { Surveys } from '../imports/api/surveys';\nimport { AddOns } from '../imports/api/addOns';\nimport { Partners } from '../imports/api/partners';\nimport { AnomalyTriggers } from '../imports/api/anomalyTriggers';\nimport { Deleted } from '../imports/api/deleted';\nimport { StockCache } from '../imports/api/stockCache';\n\n_ = lodash;\n\nvar api = new Restivus({\n\t// useDefaultAuth: true,\n\t// auth: {\n\t// \ttoken: 'auth.apiKey'\n\t// }\n});\n\n// api.addRoute('compute-stock', {\n// \tget: function() {\n// \t\tcomputeStock(new Date(Date.parse(this.queryParams.date)));\n// \t\treturn '';\n// \t}\n// });\n\napi.addRoute('export-inventory-status', {\n\tget: function() {\n\t\tconsole.log(this.queryParams);\n    var filter = this.queryParams.filter;\n    var query = {};\n    if (filter) {\n      var mealPlans = MealPlans.find({name:new RegExp(filter, 'i')}).fetch().map(mealPlan => mealPlan._id);\n      var portions = Portions.find({name:new RegExp(filter, 'i')}).fetch().map(portion => portion._id);\n      query.$or = [{name:new RegExp(filter, 'i')}, {sku:new RegExp(filter, 'i')}, {mealPlan:{$in:mealPlans}}, {portion:{$in:portions}}];\n    }\n    var meals = Meals.find(query).fetch();\n    var rows = [];\n    for (var meal of meals) {\n    \tvar stockCalculator = new StockCalculator(meal._id);\n    \tvar values = stockCalculator.forDate(this.queryParams.date);\n    \trows.push({\n    \t\t'Product Name': meal.name,\n    \t\t'Meal Plan': MealPlans.findOne(meal.mealPlan).name,\n    \t\t'Portion': Portions.findOne(meal.portion).name,\n    \t\t'SKU': meal.sku,\n    \t\t'Initial': values.initial,\n    \t\t'Sales': values.sales,\n    \t\t'Non-sales': values.nonSales,\n    \t\t'Output': values.output,\n    \t\t'Restock': values.restock,\n    \t\t'Stock': values.stock,\n    \t});\n    }\n    this.response.setHeader('Content-type', 'text/csv');\n    this.response.setHeader('Content-Disposition', 'attachment; filename=inventory-status.' + this.queryParams.date + '.csv');\n  \tthis.response.write('\"' + _.keys(rows[0] || {}).join('\",\"') + '\"\\n');\n  \tfor (var row of rows) {\n\t  \tthis.response.write('\"' + _.values(row).join('\",\"') + '\"\\n');\n  \t}\n    this.done();\n\t}\n});\n\napi.addRoute('migrate-meal-stock', {\n\tget: function() {\n\t\tvar mealStocks = MealStock.find({date:'2016-08-29', initial:null}).fetch();\n\t\tfor (var mealStock of mealStocks) {\n\t\t\tMealStock.update(mealStock._id, {$set:{initial:mealStock.stock}});\n\t\t}\n\t}\n});\n\nfunction recordStock() {\n\tvar _today = formatDate(today());\n\tvar yesterday = formatDate(addDays(today(), -1));\n\tvar meals = Meals.find().fetch();\n\tfor (var meal of meals) {\n\t\tvar yesterdaysStock = MealStock.findOne({date:yesterday, meal:meal._id});\n\t\tvar values = StockCalculator.calculate(yesterdaysStock.initial, yesterday, meal._id, {\n\t\t\tfindMealStock(mealId, date) {\n\t\t\t\treturn MealStock.findOne({meal:mealId, date:date});\n\t\t\t}\n\t\t});\n\n\t\t// console.log(values);\n\t\tMealStock.update(yesterdaysStock._id, {$set:values});\n\n\t\tif (!MealStock.findOne({date:_today, meal:meal._id})) {\n\t\t\tMealStock.insert(_.assign({date:_today, meal:meal._id}, {initial:values.stock}));\n\t\t}\n\t\telse {\n\t\t\tMealStock.update({date:_today, meal:meal._id}, {$set:{initial:values.stock}});\n\t\t}\n\t}\n}\n\napi.addRoute('record-stock', {\n\tget: function() {\n\t\trecordStock();\n\t\treturn '';\n\t}\n});\n\napi.addRoute('generate-stock-cache', {\n\tget: function() {\n\t\tvar meals = Meals.find().fetch();\n\t\tvar firstDate = '2016-08-29';\n\t\tfor (var meal of meals) {\n\t\t\tvar date = firstDate;\n\t\t\tvar lastDate = formatDate(today());\n\t\t\tvar prevDate, prevValues;\n\t\t\tdo {\n\t\t\t\tvar values = StockCalculator.calculate(date == firstDate ? (MealStock.findOne({meal:meal._id, date:date}) || {initial:0}).initial : prevValues.stock, date, meal._id, {\n\t\t\t\t\tfindMealStock(mealId, date) {\n\t\t\t\t\t\treturn MealStock.findOne({meal:mealId, date:date});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif (!MealStock.findOne({date:date, meal:meal._id})) {\n\t\t\t\t\tMealStock.insert(_.assign({date:date, meal:meal._id}, values));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tMealStock.update({date:date, meal:meal._id}, {$set:values});\n\t\t\t\t}\n\t\t\t\tprevDate = date;\n\t\t\t\tprevValues = values;\n\t\t\t\tdate = formatDate(addDays(date, 1));\n\t\t\t} while (date != lastDate);\n\t\t}\n\t\treturn '';\n\t}\n});\n\napi.addRoute('stock', {\n\tget: function() {\n\t\tvar meals = Meals.find().fetch();\n\t\tvar yesterday = addDays(today(), -1);\n\t\tvar stockCache = StockCache.findOne({});\n\t\tvar yesterdaysStock;\n\t\tif (!stockCache || stockCache.timestamp.valueOf() != yesterday.valueOf()) {\n\t\t\tyesterdaysStock = {};\n\t\t\tfor (let meal of meals) {\n\t\t\t\tlet stockCalculator = new StockCalculator(meal._id);\n\t\t\t\tyesterdaysStock[meal._id._str] = (stockCalculator.forDate(yesterday) || {stock:0}).stock;\n\t\t\t}\n\t\t\tif (stockCache) {\n\t\t\t\tStockCache.update({_id:stockCache._id}, {$set:{timestamp:yesterday, stock:yesterdaysStock}});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tStockCache.insert({timestamp:yesterday, stock:yesterdaysStock});\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tyesterdaysStock = stockCache.stock;\n\t\t}\n\t\tvar stock = {};\n\t\tfor (let meal of meals) {\n\t\t\tstock[meal._id._str] = StockCalculator.calculate(yesterdaysStock[meal._id._str], formatDate(today()), meal._id, {\n\t\t\t\tfindMealStock(mealId, date) {\n\t\t\t\t\treturn MealStock.findOne({meal:mealId, date:date});\n\t\t\t\t}\n\t\t\t}).stock;\n\t\t}\n\t\treturn stock;\n\t}\n});\n\nfunction computeStock(date) {\n\tvar previousDay = formatDate(addDays(date, -1));\n\n\tvar mealStocks = MealStock.find({date:previousDay}).fetch();\n\n\tfor (var mealStock of mealStocks) {\n\t\tvar sales = mealSales(mealStock.meal, previousDay);\n\t\tvar output = sales + (mealStock.nonSales || 0);\n\t\tvar final = (mealStock.stock - output) + (mealStock.restock || 0);\n\t\tMealStock.update({\n\t\t\tmeal: mealStock.meal,\n\t\t\tdate: formatDate(date)\n\t\t}, {$set:{\n\t\t\tstock: final\n\t\t}}, {upsert: true});\n\t}\n}\n\nMeteor.startup(() => {\n});\n\nSyncedCron.add({\n\tname: 'Update stock for day.',\n\tschedule(parser) {\n\t\treturn parser.cron('0 0 */1 * *');\n\t},\n\tjob() {\n\t\trecordStock();\n\t}\n});\nSyncedCron.start();\n\nMeteor.methods({\n\tuploadImage(args) {\n\t\tvar result = HTTP.post(Meteor.settings.public.imageServerUrl + '/upload.php?type=' + (args.type || 'raster'), {\n\t\t\tcontent:args.data,\n\t\t});\n\t\tconsole.log(result);\n\t\tif (result.data.result == 'success') {\n\t\t\treturn result.data;\n\t\t\t// Meteor.users.update({_id:Meteor.userId()}, {$set:{'profile.picture':result.data.url}});\n\t\t}\n\t},\n\tclearStockCache() {\n\t\tStockCache.remove({});\n\t},\n\tsendResetPasswordEmail(userId) {\n\t\tAccounts.sendResetPasswordEmail(userId);\n\t}\n});"]}